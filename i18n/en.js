module.exports = {
  common: {
    select: 'Select',
    save: 'Submit',
    cancel: 'Cancel',
    confirm: 'Confirm',
    doubleClick: 'Take a break~',
    empty: 'No Data',
    submitSuccess: 'Submitted',
    gotIt: 'Got it',
  },
  auth: {
    needLogin: 'Please Login First',
  },
  date: {
    year: 'Y',
    month: 'M',
    day: 'D',
    hour: 'H',
    minutes: 'm',
  },
  ad_index: {
    title: 'Shipping Address',
    add: 'New Address',
    empty: 'Address is Empty',
    pleaseAdd: 'Click to Add Address',
    linkMan: 'Name',
    linkManPlaceholder: 'Input Recipient Name',
    mobile: 'Mobile',
    mobilePlaceholder: 'Input Mobile',
    region: 'Region',
    regionPlaceholder: 'Select Region',
    location: 'Positioning',
    address: 'Address',
    addressPlaceholder: 'Streets, buildings, house signs, etc',
    apiError: 'Unable to Obtain Data',
    deleteProfile: 'Are you sure you want to delete this Shipping Address?',
  },
  order: {
    title: 'Orders',
    cancelProfile: 'Are you sure you want to cancel this order?',
    scoreNotEnough: 'Your Score are is Not enough!',
    amountReal: 'Order Amount',
    balance: 'Balance',
    payAmount: 'Still need Pay',
    payScore: 'Score need to be deducted:',
    noCashAccount: 'Unable to obtain user funding information',
    status: {
      st01: 'Canceled',
      st10: 'To be picked',
      st11: 'In delivery',
      st3: 'Completed',
    },
    deleteProfile: 'Are you sure you want to delete this order?',
    empty: {
      t1: 'You haven\'t ordered your meal yet',
      t2: 'Hurry up and reward yourself!',
      btn: 'Go and order a meal',
    },
    dateAdd: 'Order Time',
    orderNumber: 'Order No',
    callShop: 'Contact',
    deleteOrder: 'Delete',
    cancelOrder: 'Cancel',
    toPayTap: 'Pay Now',
  },
  cashLog: {
    title: 'Fund details',
  },
  asset: {
    title: 'Wallet',
    recharge: 'Recharge',
    amount: 'Amount',
    amountPlaceholder: 'Please enter the recharge amount',
    confirmBtn: 'Confirm Recharge',
    success: 'Payment successful',
    confine: 'Pay',
    send: 'Send',
    other: 'Other',
    rechargeLogs: 'Recharge Records',
  },
  booking: {
    title: 'Booking',
    name: 'Name',
    namePlaceholder: 'Enter contact person',
    mobile: 'Mobile',
    mobilePlaceholder: 'Convenient for us to contact you',
    time: 'Arrival',
    timePlaceholder: 'Select estimated time of arrival',
    person: 'Person',
    tip: 'Seat reserved for half an hour, invalid if overdue',
  },
  cart: {
    title: 'Cart',
    empty: 'No Data',
    clear: 'Clear All',
    num: 'Num',
    btn: 'Submit',
    ordered: 'Ordered Dishes',
    tableNum: 'TableNum',
    Tobeconfirmed: 'To be confirmed',
    Cooked:'Cooked',
    Served:'Served',
    Numofdishes:'Num of dishes',
    Consumptionamount:'Consumption amount',
    Payableamount:'Payable amount',
    Check:'Check',
  },
  coupons: {
    title: 'Coupons',
    inputpassword:'Input password',
    Cominglate:'Cominglate',
    receivedgreedy:'You have received it, you cannot receive it anymore',
    pointsinsufficient:'Your points are insufficient',
    Expired :'Expired',
    Successfullyclaimed :'Success',
    enternum:'Enter the coupon number',
    password:'password',
    Redemption:'Redemption successful',
    Invitingcoupons:'Inviting you to collect coupons',
    Vouchers: 'Vouchers',
    over: 'Over',
    btn: 'Fetch',
    expire: 'exp',
    toUse: 'Use',
    number: 'Code',
    numberPlaceholder: 'Please enter the coupon Code',
    pwd: 'Password',
    pwdPlaceholder: 'Please enter password',
    change: 'Exchange',
  },
  goodsDetail: {
    title: 'Product Details',
    noStores: 'sold out',
    noSelectSku: 'Please select sku',
    noSelectAddtion: 'Please select an accessory',
    buyNumber: 'Purchase quantity',
    noSelectNumber: 'Please select the purchase quantity',
    addCartSuccess: 'Add Success',
    addCartBtn: 'Add to Cart',
    inviteKanJia: 'Inviting you to help TA negotiate',
    inviteKanJiaFriend: 'Invite friends to help',
    kanJiaAmount: 'Successfully helped TA cut it down',
    kanJiaSetting: 'Bargaining Settings',
    longTapQrcode: 'Long press to recognize mini program code',
    qrcodeSaved: 'saved to phone album',
    commission1: 'Sharing rewards, friends can receive rewards after placing an order',
    commission2: 'Points reward',
    commission3: 'Cash rewards',
    limit: 'Limited',
    saledNum: 'Sold',
    originalPrice: 'Original Price',
    minPrice: 'Min Price',
    end: 'End',
    ended: 'Bargaining has ended',
    help: 'Help',
    kanjia: 'Bargaining',
    help2: 'Help',
    helpPerson: 'Help Person',
    status: 'Status',
    joinTime: 'Registration Time',
    buy: 'Purchase',
    kanjiaLogs: 'Bargaining Records',
    helped: 'You have already Helped',
    helphe: 'Help',
    buyUseCurPrice: 'Purchase at current price',
    storeing: 'Replenishing',
    kanjiaBtn: 'Initiate bargaining | Invite friends to help',
    saveImage: 'Save to album',
  },
}